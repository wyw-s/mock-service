#!/usr/bin/env node

const app = require('../app/app');
const http = require('http');

const { PORT, HOSTNAME } = process.env;
const port = normalizePort(PORT || '3000');
const server = http.createServer(app.callback());

function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {
  const addr = server.address();
  console.info('服务启动成功 %O', `http://${ addr.address }:${ addr.port }`);
}

server.listen({host: HOSTNAME, port});
server.on('error', onError);
server.on('listening', onListening);

